Use MetroAlt
--This involves joining tables, then using a subquery. Return the employee key, last name and first name, position name and hourly rate for those employees receiving the maximum pay rate.
Select E.EmployeeKey, EmployeeLastName, EmployeeFirstName, PositionName, EmployeeHourlyPayRate
from Employee E
inner join EmployeePosition P
on E.EmployeeKey = P.EmployeeKey
inner join Position on Position.PositionKey = P.PositionKey
where EmployeeHourlyPayRate = (select max(EmployeeHourlyPayRate) from EmployeePosition)


--Use only subqueries to do this. Return the key, last name and first name of every employee who has the position name “manager.”
Select EmployeeKey, EmployeeFirstName, EmployeeLastName
from Employee
Where EmployeeKey in (Select EmployeeKey from EmployeePosition where PositionKey in (Select PositionKey from Position where PositionName='Manager'))




--This is very difficult. It combines regular aggregate functions, a scalar function, a cast, subqueries and a join. But it produces a useful result. The results should look like this: User Ridership totals for the numbers.
--aggregatefunctions.png
--The Total  is the grand total for all the years. The Percent is Annual Total / Grand Total * 100

--Create a new table called EmployeeZ. It should have the following structure:
EmployeeKey int,
EmployeeLastName nvarchar(255),
EmployeeFirstName nvarchar(255),
EmployeeEmail Nvarchar(255)

--Use an insert with a subquery to copy all the employees from the employee table whose last name starts with “Z.”


--This is definitely not done
--This is a correlated subquery. Return the position key, the employee key and the hourly pay rate for those employees who are receiving the highest pay in their positions. Order it by position key.
--Limit the sets in the last table with the where statements.
